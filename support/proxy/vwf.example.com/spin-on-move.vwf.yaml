--- 
extends: |
  http://vwf.example.com/node3.vwf
properties:
  spin-rate: 1
  spin-axis: [ 0, 0, 1 ]
  spin-inputDim: "x"
  spin-value: 0
events:
  valueChanged:
methods:
  spin:
scripts:
- text: |
    this.initialize = function() {
      this.input = {
        "pointerInfo": undefined,
        "pickInfo": undefined,
        "previous": {
          "pointerInfo": undefined,
          "pickInfo": undefined,        
        },
        pointerDown: {
          "pointerInfo": undefined,
          "pickInfo": undefined,        
        },
        update: function( pointerInfo, pickInfo ){
          this.previous.pointerInfo = this.pointerInfo;
          this.previous.pickInfo = this.pickInfo;
          this.pointerInfo = pointerInfo;
          this.pickInfo = pickInfo;
        }, 
        clear: function(){
          this.previous.pointerInfo = undefined;
          this.previous.pickInfo = undefined;
          this.pointerInfo = undefined;
          this.pickInfo = undefined;        
        },
        change: function() {
          var ret = [ 0, 0 ]
          if ( this.pointerInfo && this.previous.pointerInfo ) {
            ret[0] = this.pointerInfo.position[0] - this.previous.pointerInfo.position[0];
            ret[1] = this.pointerInfo.position[1] - this.previous.pointerInfo.position[1];          
          }
          return ret;
        }
      };
    }
    this.pointerDown = function( pointerInfo, pickInfo ) {
      if ( !this.input ) this.initialize();

      this.input.pointerDown.pointerInfo = pointerInfo;
      this.input.pointerDown.pointerInfo = pickInfo;
      this.input.clear();
    }
    this.pointerUp = function( pointerInfo, pickInfo ) {
      this.input.clear();
    }
    this.pointerMove = function( pointerInfo, pickInfo ) {
      this.input.update( pointerInfo, pickInfo );
      var diff = this.input.change();
      switch( this["spin-inputDim"] ) {
        case "x":
          this.spin( diff[0] );
          break;
        case "y":
          this.spin( diff[1] );
          break;
      }
    }
    this.spin = function( value ){
        if ( !this["spin-value"] ) {
          var rotation = this.rotation;
          this["spin-value"] = rotation[3];
        }
        this["spin-value"] += this["spin-rate"];
        this.rotateBy( [ this["spin-axis"][0], this["spin-axis"][1], this["spin-axis"][2], this["spin-value"] ], 0 ) ;  
    } //@ sourceURL=spin-on-move.vwf

