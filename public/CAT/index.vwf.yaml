# Copyright 2014, SRI International
---
extends: http://vwf.example.com/scene.vwf
implements:
- begin.cat
- backendtxrx.cat
methods:
  initializeCamera:
  resetBackend:
  transformGroupingToNode3:
  vwfChildJsonFromGrouping:
  initInstance:
  instance:
properties:
  backendResetSent:
children:
  light1:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      translation: [ -0.5, 0, 2 ]
      rotation: [ 0, 1, 0, 36 ]
  light2:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "ambient"
scripts:
- |
  this.initialize = function() {
    this.backendResetSent = false;
    this.future(0).initializeCamera();
  };

  this.initializeCamera = function() {
    this.camera.translation = [ -1.25, 0, 2.2 ];
    this.camera.rotation = [ 0, 0, 1, -90 ];
  };

  this.resetBackend = function() {
    var self = this;

    this.query({ type: 'Reset' },
      function() {
        self.backendResetSent = true;
      }
    );
  };

  this.transformGroupingToNode3 = function(obj, node3) {
    var self = this;

    for (var p in obj) {
        if (p == 'groups') {
            obj.groups.forEach(function(group) {
                var children = node3;

                if (group.node) {
                    node3.children[ group.node ] = { extends: "http://vwf.example.com/node3.vwf", children: { } };
                    children = node3.children[ group.node ];
                }

                self.transformGroupingToNode3(group, children);
            });
        } else if (p == 'parts') {
            obj.parts.forEach(function(part) {
                node3.children[ part ] = { extends: "http://vwf.example.com/node3.vwf" };
            });
        }
    }

    return node3;
  };

  this.vwfChildJsonFromGrouping = function(grouping) {
    var groupingObj = grouping !== undefined? JSON.parse(grouping) : { name: undefined };
    // vwf include might be better? var tt = { "includes": "http://vwf.example.com/tools/transform/transformTool.vwf" } ... this.children.create("transformTool", tt, function( child ) { ... });
    var baseNode3 = {
      extends: "http://vwf.example.com/node3.vwf",
      type: "model/vnd.collada+xml",
      implements: [ 'catNode3.vwf', 'backendtxrx.cat' ], // => initial state, base behavior, and props
      properties: { },
      children: { },
      grouping: groupingObj.name
    };
    
    var rootNode3 =  grouping !== undefined? this.transformGroupingToNode3(groupingObj, baseNode3) : baseNode3;

    return rootNode3;
  };

  this.initInstance = function(name, kbid) {
    this.children[ name ].init(kbid);
    return name;
  };

  this.instance = function(backEndId) {
    console.info(this.id + ' instancing tool tray item with name:' + name  + ' id:' + backEndId);

    var self = this;

    self.obj({ type: 'create', ID: backEndId }, function(data) {
      console.info(self.id + ' obj request received data.kbid: ' + data.KbId + ' assetURL: ' + data.assetURL);

      if (data.grouping === undefined) {
        console.warn(self.id + ' object instance request returned undefined grouping, no child to instance');
        return;
      }

      var vwf_node3 = self.vwfChildJsonFromGrouping(data.grouping);

      name = vwf_node3.grouping.replace(' ', '_') + '_dae'; // => example: M4_Carbine_dae
      vwf_node3.source = data.assetURL;
      self.children.create(name, vwf_node3, function(child) {
        self.initInstance(name, data.KbId);
      });
    });
  }; //# sourceURL=index.vwf
