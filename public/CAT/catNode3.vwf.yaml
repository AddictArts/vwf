# Copyright 2014, SRI International
--- 
properties:
  __idToName:
  # populate from the grouping?
methods:
  init:
scripts:
- |
  // Don't use initialize() like you might want to...this is implemented behavior for a JavaScript created component.
  // Since this init depends on another implemented behavior that could be loaded before this and may fix the
  // undefined reference error, I will just handle init myself. I did not test the order in the array of implements theory.
  this.init = function() {
    console.info(this.id + ' ' + this.name + ' init');
    // Point the weapon in an unsafe direction as the initial state until the tools / backend set the initial state
    this.rotateBy([ 0, 0, 1, 90 ], 0); // rotate z => 90

    // Map vwf component children id's (aka transforms) to object names and add the backend id as a property to each child
    this.checkForServerProperty(); // set the server address for the interfaces from parent if we need to
    this.__idToName = { };
    this.__idToName[ this.id ] = this.name;

    var self = this;
    var count = self.children.length;
    var comps = [ ];

    for (var i = 0; i < count; i++) {
      var child = self.children[ i ]; 
      var name = child.name;
      var id = child.id;

      self.__idToName[ id ] = name;

      // if (self[ name + '_KbId' ]) comps.push(name);
    }

    // console.log(self.__idToName);

    // self.query(
    //   { type: 'KbId', parent: self.M4_Carbine_KbId, query: comps },
    //   function(data) {
    //     console.info(self.id + " init query received data " + JSON.stringify(data));

    //     for (var i = 0; i < data.KbIds.length; i++) {
    //       self[ comps[ i ] + '_KbId' ] = data.KbIds[ i ];
    //     }
    //   }
    // );
  }; //# sourceURL=catNode3.ux
