# Copyright 2014, SRI International
--- 
properties:
  __idToName:
methods:
  init:
scripts:
- |
  // Don't use initialize() like you might want to...this is implemented behavior for a JavaScript created component.
  // Since this init depends on another implemented behavior that could be loaded before this and may fix the
  // undefined reference error, I will just handle init myself. I did not test the order in the array of implements theory.
  this.init = function(kbid, mgroups) {
    console.info(this.id + ' ' + this.name + ' init');
    this.checkForServerProperty(); // set the server address for the interfaces from parent if we need to

    // Map vwf component children id's (aka transforms) to object names and add the backend id as a property to each child
    //TODO Would findByID be better thank the cache __idToName? post 1.0
    // var clickedNode = this.findByID( this, pickInfo.pickID );
    this.__idToName = { };
    this.__idToName[ this.id ] = this.name;
    this.properties.create(this.name +  '_KbId', kbid);

    //TODO need to look into all the children (depth), new function and recursive call, post 1.0, or just use the grouping data rather than the children, post 1.0
    for (var i = 0, count = this.children.length; i < count; i++) {
      var child = this.children[ i ]; 
      var name = child.name;
      var id = child.id;

      this.__idToName[ id ] = name;
      this.properties.create(name + '_KbId', undefined);
    }

    console.log('__idToName:');
    console.log(this.__idToName);
    // console.log(this);
  }; //# sourceURL=catNode3.vwf
