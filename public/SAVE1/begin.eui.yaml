# Copyright 2014, SRI International
---
properties:
  __initializeStep: 0
  # inputMode:
  #   set: |
  #     switch(value) {
  #       // case "1":
  #       //   break;
  #       default:
  #         this.logger.warnx("inputMode.set: unsupported input modes");
  #         break;
  #     } //@ sourceURL=inputMode.set
methods:
  resetMe:
scripts:
- |
  this.initialize = function() {
    this.__initializeStep++;

    if (this.__initializeStep == 1) return;

    var self = this;

  	console.log("Configure the exercise begin.eui");

    $.getJSON("eui.json")
    .done(function(data) {
      console.log("data:" + data);

      var wallNode = self.children['wall_dae']['wall'];
      var doorWoodNode = self.children['doorWood_dae']['doorWood'];
      var doorSteelNode = self.children['doorSteel_dae']['doorSteel'];

      wallNode.activityArguments.wallKBID = data.wallKBID;
      wallNode.activityArguments.floorKBID = data.floorKBID;
      wallNode.activityServerAddress = data.activityServerAddress;

      doorWoodNode.activityArguments.doorWoodKBID = data.doorWoodKBID;
      doorWoodNode.activityArguments.wallKBID = data.wallKBID;
      doorWoodNode.activityServerAddress = data.activityServerAddress;

      doorSteelNode.activityArguments.doorSteelKBID = data.doorSteelKBID;
      doorSteelNode.activityArguments.wallKBID = data.wallKBID;
      doorSteelNode.activityServerAddress = data.activityServerAddress;
    })
    .fail(function(jqXHR, textStatus, errorThrown) {
      console.log("error:" + textStatus);
    });
  };

  this.resetMe = function() {
    console.log("begin.eui resetMe");

    var wallNode = this.children['wall_dae']['wall'];
    var doorWoodNode = this.children['doorWood_dae']['doorWood'];
    var doorSteelNode = this.children['doorSteel_dae']['doorSteel'];

    // These values should come from one place and not need maintaining in two, so maybe the eui.json?
    // For now this is good enough
    wallNode._onEdge = false;
    wallNode._fenced = false;
    wallNode.translation = [ 0.0, 10.0, 3.0 ];

    doorWoodNode._fenced = false;
    if (doorWoodNode.initialColor) doorWoodNode.material.color = doorWoodNode.initialColor;
    doorWoodNode.translation = [ 3.0, -3.8, 10.0 ];

    doorSteelNode._fenced = false;
    if (doorSteelNode.initialColor) doorSteelNode.material.color = doorSteelNode.initialColor;
    doorSteelNode.translation = [ 8.0, -3.8, 10.0 ];
  }; //@ sourceURL=begin.eui
