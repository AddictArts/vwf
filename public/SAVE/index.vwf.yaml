--- 
extends: http://vwf.example.com/scene.vwf
children:
  xyz_dae:
    extends: http://vwf.example.com/node3.vwf
    source: xyzbar.dae
    type: model/vnd.collada+xml
    properties:
      scale: [ 1.0, 1.0, 1.0 ]
  slab_dae:
    extends: http://vwf.example.com/node3.vwf
    source: slab.dae
    type: model/vnd.collada+xml
    properties:
      scale: [ 1.0, 1.0, 1.0 ]
  # wallOriginParent:
  #   extends: http://vwf.example.com/node3.vwf
  #   properties:
  #     translation: [ 0.0, 0.0, 0.0 ]
  #   children:
  wall_dae:
    extends: http://vwf.example.com/node3.vwf
    implements:
    - drag.ux # must have a parent transform
    source: wall.dae
    type: model/vnd.collada+xml
    properties:
      _onEdge: false
      scale: [ 1.0, 1.0, 1.0 ]
      # enabled: true # does not seem to work
      # visible: true # does not seem to work
      translation: [ 0.0, 10.0, 3.0 ]
    # methods:
    #   tick: |
    #           console.log(this.parent.translation[2]);
    #           if(this.parent.translation[2] < -2.8)
    #           {
    #             console.log('on edge!')
    #             this._onEdge = true;
    #           }
    #           if(this._onEdge)
    #           {
    #             this.parent.translation = [this.parent.translation[0], this.parent.translation[1],  -3];
    #             this.enabled = false;
    #           }
    # children: # Looking into the collada file, it seems the root of the collada document has a single child, which is a mesh. .visible does not hit the whole heirarchy, only the current node.
    #   wall: # So, you need to 'bind' a vwf node to the node withing the collada document, so that you can control the visible property of the mesh.
    #     extends: http://vwf.example.com/node3.vwf
    #     properties:
    #       # enabled: false
    #       visible: true
    #     methods:
    #       toggle: |
    #         this.visible = !this.visible;
    #         this.future(3).toggle();
    #       initialize: |
    #         // this.future(20).toggle();
  light:
    extends: http://vwf.example.com/light.vwf
    properties:
      lightType: "directional"
      translation: [ 0.0, -25.0, 20.0 ]
      rotation: [ -1.0, 0.0, 0.0, 36.0 ]
  camera:
    extends: "http://vwf.example.com/camera.vwf"
    properties:
      translation: [ -40.0, -30.0, 20.0 ]
      rotation: [ -0.3, 0.1, -1.0, 50.0 ]
