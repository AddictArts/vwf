---
methods:
  mouseInit:
  cameraScreenToWorldVec:
events:
  pointerDown:
  pointerMove:
  pointerUp:
scripts:
- |
  this.initialize = function() {
    this.ycam = undefined;
    this.offsetTransPos = goog.vec.Vec3.createFloat32();
  };

  this.cameraScreenToWorldVec = function(screenX, screenY, d) {
    //console.log("screenX:" + screenX + ", screenY:" + screenY);

    var s2wVec = new THREE.Vector3();
    var cameraPosition = new THREE.Vector3();
    var x = (screenX / window.innerWidth) * 2 - 1;
    var y = -(screenY / window.innerHeight) * 2 + 1;

    s2wVec.set(x, y, d);
    //console.log("s2wVec:" + s2wVec.toArray());
    _dView.projector.unprojectVector(s2wVec, _dView.state.cameraInUse);
    cameraPosition.setFromMatrixPosition(_dView.state.cameraInUse.matrixWorld);
    s2wVec.sub(cameraPosition);
    return goog.vec.Vec3.createFloat32FromArray(s2wVec.normalize().toArray());
  };

  this.pointerDown = function(pointerInfo, pickInfo) {
    var Vec3 = goog.vec.Vec3;
    var moveToPosition = Vec3.createFloat32();

    //console.log("pickInfo.globalNormal:" + pickInfo.globalNormal[0] + ", " + pickInfo.globalNormal[1] + ", " + pickInfo.globalNormal[2]);
    //console.log("pickInfo.globalPosition:" + pickInfo.globalPosition[0] + ", " + pickInfo.globalPosition[1] + ", " + pickInfo.globalPosition[2]);
    //console.log("pointerInfo.position:" + pointerInfo.position);

    this.ycam = pickInfo.distance;

    var s2wVec = this.cameraScreenToWorldVec(pointerInfo.screenPosition[0], pointerInfo.screenPosition[1], 1.0);

    // Vec3.subtract(this.translation, s2wVec, this.offsetTransPos);

    //console.log("pointerDown s2wVec:" + s2wVec[0] + ", " + s2wVec[1] + ", " + s2wVec[2]);
    //console.log("pointerDown translation:" + this.translation[0] + ", " + this.translation[1] + ", " + this.translation[2]);
    //console.log("pointerDown ycam:" + this.ycam);
    // //console.log("pointerDown offsetTransPos:" + this.offsetTransPos[0] + ", " + this.offsetTransPos[1] + ", " + this.offsetTransPos[2]);

    // Vec3.add(this.translation, this.offsetTransPos, moveToPosition);

    // //console.log("pointerDown moveToPosition:" + moveToPosition[0] + ", " + moveToPosition[1] + ", " + moveToPosition[2]);
    // this.translation = Vec3.createFloat32FromArray(pickInfo.globalPosition);
  };

  this.pointerUp = function(pointerInfo, pickInfo) {
  };

  // _dView.state.cameraInUse
  // -> THREE.PerspectiveCamera {id: 3, uuid: "9A1888C3-7109-43E5-970D-76CBD72A0D4F", name: "camera", parent: THREE.Scene, children: Array[0]â€¦}
  // vwf.models[0].model.nodes[id]
  // vwf.application()
  // "index-vwf"
  // vwf.models[0].model.nodes[cameraID].worldTransform
  // vwf.models[3].model.state.nodes[_Editor.GetSelectedVWFID()].threeObject

  this.pointerMove = function(pointerInfo, pickInfo) {
    return;

    var Vec3 = goog.vec.Vec3;

    ////console.log("pointerDown ycam:" + this.ycam);

    var moveToPosition = Vec3.add(this.translation, this.offsetTransPos, Vec3.create());

    this.translation = moveToPosition;

  }; //@ sourceURL=drag.ux
