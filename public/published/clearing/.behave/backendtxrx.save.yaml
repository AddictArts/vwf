# Copyright 2016 SRI International

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
properties:
  objectServerAddress:
  queryServerAddress:
  activityServerAddress:
methods:
  checkForServerProperty:
  obj:
  query:
  activity:
  post:
scripts:
- |
  // NOTE: Called once even if multiple things implement this behavior
  this.initialize = function() {
    if (!this.__initializeStep) return; // begin.save added property, used to prevent double initialization at the root component

    // we depend on config save.json or save-defaults.json via <script/> in index.vwf.html
  };

  this.checkForServerProperty = function() {
    if (this.parent) {
      console.info('backendtxrx.save Setting the servers using the parent properties...');
      this.queryServerAddress = this.parent.queryServerAddress;
      this.objectServerAddress = this.parent.objectServerAddress;
      this.activityServerAddress = this.parent.activityServerAddress;

      if (!this.parent.baseServerAddress) {
        console.warn("The baseServerAddress server address is undefined, check the eui.json setting " + this.id);
        jQuery('#euiMsg').text('The baseServerAddress is undefined in eui.json.js __EUI.baseServerAddress');
      } else {
        console.info(this.id + " backendtxrx.save objectServerAddress:" + this.objectServerAddress);
        console.info(this.id + " backendtxrx.save queryServerAddress:" + this.queryServerAddress);
        console.info(this.id + " backendtxrx.save activityServerAddress:" + this.activityServerAddress);
      }
    }
  };

  this.obj = function(data, done /* callback */) {
    console.info(this.id + " backendtxrx.save object " + JSON.stringify(data));
    this.post({ object: JSON.stringify(data) }, this.objectServerAddress, done);
  };

  this.query = function(data, done /* callback */) {
    console.info(this.id + " backendtxrx.save query " + JSON.stringify(data).slice(0, 272) + "...");
    this.post({ query: JSON.stringify(data) }, this.queryServerAddress, done);
  };

  this.activity = function(data, done /* callback */) {
    console.info(this.id + " backendtxrx.save activity " + JSON.stringify(data));
    jQuery('#euiMsg .actionDesc').text('Action performed:');
    jQuery('#euiMsg .actionKey').text(data.action);
    jQuery('#euiMsg .actionArgs').text(data.names.toString().replace(',', ', '));

    var json = { activity: JSON.stringify(data) };

    this.post(json, this.activityServerAddress, done);
  };

  this.post = function(json, url, done) {
    jQuery.ajax({
      url: url,
      type: 'post',
      cache: false,
      data: json
    })
    .done(done)
    .fail(function(jqXHR, textStatus, errorThrown) {
      console.info('using serverAddress:' + url);
      console.warn("error:" + textStatus);
    });
  }; //# sourceURL=backendtxrx.save

  // http://www.html5rocks.com/en/tutorials/cors/
  // response['Access-Control-Allow-Origin'] = '*'
  // response['Access-Control-Allow-Methods'] = 'POST, GET, OPTIONS'
  // response['Access-Control-Max-Age'] = 1000
  // # note that '*' is not valid for Access-Control-Allow-Headers
  // response['Access-Control-Allow-Headers'] = 'origin, x-csrftoken, content-type, accept'
  //
  // httpRes.setHeader('Access-Control-Allow-Origin', httpReq.headers.origin); // can only be a single origin
  // httpRes.setHeader('Access-Control-Allow-Credentials', 'true');
  // httpRes.setHeader('Access-Control-Allow-Headers', 'Authorization');
  // httpRes.setHeader('Access-Control-Allow-Methods', 'PUT');
