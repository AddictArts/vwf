---
properties:
  activityServerAddress:
  # activityArguments:
  # action:
methods:
  checkActivityServerAddress:
  activity:
events:
  pointerUp:
scripts:
- |
  var getActionActivity = function(action) {
    var action,
        activityArguments = "undefined arguments";

    switch(action) {
    case "PLACE":
      activityArguments = [ this.activityArguments.wallKBID, this.activityArguments.floorKBID, this.activityArguments.onEdge];
      break;
    case "INSTALL":
      var doorKBID = (this.name == "doorWood")? this.activityArguments.doorWoodKBID : this.activityArguments.doorSteelKBID;

      activityArguments = [ doorKBID, this.activityArguments.wallKBID, this.activityArguments.distanceLeft, this.activityArguments.distanceRight ];
      break;
    case "PAINT":
      var doorKBID = (this.name == "doorWood")? this.activityArguments.doorWoodKBID : this.activityArguments.doorSteelKBID;

      activityArguments = [ doorKBID, this.activityArguments.paint ];
      break;
    }

    action = {  action: action, arguments: activityArguments };
    return action;
  };

  this.initialize = function() {
    this.activityArguments = {
    };
    this.action = this.action || "activity.ux action";
    this.future(0).checkActivityServerAddress();
  };

  this.checkActivityServerAddress = function() {
    if (!this.activityServerAddress) {
      var msg = "The activity server address is undefined, check the eui.json setting";

      $('#actionMsg').text(msg);
      console.warn(msg);
    } else {
      console.info("activity.ux activityServerAddress:" + this.activityServerAddress);
    }
  }

  this.activity = function(activity) {
    console.info("activity.ux activity");

    var activityJSON = JSON.stringify(getActionActivity(this.action));

    $('#actionMsg').text(activityJSON);
    // this.checkActivityServerAddress(); //XXX once I can set a server put this back into place!
    $.ajax({
      url: this.activityServerAddress,
      type: 'post',
      cache: false,
      data: { activity: activityJSON }
    })
    .done(function(data) {
    })
    .fail(function(jqXHR, textStatus, errorThrown) {
      console.warn("error:" + textStatus);
    });
  };

  this.pointerUp = function(pointerInfo, pickInfo) {
    console.info("activity.ux pointerUp");

    this.activity('SCENE_CLICK');
  }; //@ sourceURL=activity.ux

  // http://www.html5rocks.com/en/tutorials/cors/
  // response['Access-Control-Allow-Origin'] = '*'
  // response['Access-Control-Allow-Methods'] = 'POST, GET, OPTIONS'
  // response['Access-Control-Max-Age'] = 1000
  // # note that '*' is not valid for Access-Control-Allow-Headers
  // response['Access-Control-Allow-Headers'] = 'origin, x-csrftoken, content-type, accept'
