---
properties:
  activityServerAddress:
  queryServerAddress:
  assessmentServerAddress:
methods:
  checkServerAddress:
  activity:
  ask:
scripts:
- |
  // NOTE: Called once even if multiple things implement this behavior
  this.initialize = function() {
    if (!this.__initializeStep) return; // begin.eui added property, used to prevent double initialization at the root component

    // we depend on config eui.json or eui-defaults.json via <script/> in index.vwf.html
  };

  this.checkServerAddress = function() {
    if (this.parent) {
      console.info('backendtxrx.ux Setting the servers using the parent properties...');
      this.activityServerAddress = this.parent.activityServerAddress;
      this.queryServerAddress = this.parent.queryServerAddress;
      this.assessmentServerAddress = this.parent.assessmentServerAddress;
    }

    if (!this.activityServerAddress || !this.queryServerAddress || !this.assessmentServerAddress) {
      var msg;

      if (!this.activityServerAddress) msg = "The activity server address is undefined, check the eui.json setting " + this.id;
      else if (!this.queryServerAddress) msg = "The query server address is undefined, check the eui.json setting " + this.id;
      else if (!this.assessmentServerAddress) msg = "The assessmentServerAddress server address is undefined, check the eui.json setting " + this.id;

      jQuery('#reasonertxrxMsg').text(msg);
      console.warn(msg);
    } else {
      console.info(this.id + " backendtxrx.ux activityServerAddress:" + this.activityServerAddress);
      console.info(this.id + " backendtxrx.ux queryServerAddress:" + this.queryServerAddress);
      console.info(this.id + " backendtxrx.ux assessmentServerAddress:" + this.assessmentServerAddress);
      jQuery('#backendtxrxMsg').text('Servers ' + this.activityServerAddress + ', ' + this.queryServerAddress + ', ' + this.assessmentServerAddress);
    }
  };

  this.ask = function(query, done /* callback */) {
    console.info("backendtxrx.ux ask " + JSON.stringify(query));

    var url = this.queryServerAddress;
    var queryJSON = JSON.stringify(query);

    jQuery('#backendtxrxMsg').text(queryJSON);
    jQuery.ajax({
      url: url,
      type: 'post',
      cache: false,
      data: { query: queryJSON }
    })
    .done(done)
    .fail(function(jqXHR, textStatus, errorThrown) {
      console.info('using queryServerAddress:' + url);
      console.warn("error:" + textStatus);
    });
  };

  this.activity = function(activity, done /* callback */) {
    console.info("backendtxrx.ux activity " + JSON.stringify(activity));

    var url = (this.activityServerAddress == null)? this.parent.activityServerAddress : this.activityServerAddress;
    var activityJSON = JSON.stringify(activity);

    jQuery('#backendtxrxMsg').text(activityJSON);
    jQuery.ajax({
      url: url,
      type: 'post',
      cache: false,
      data: { activity: activityJSON }
    })
    .done(done)
    .fail(function(jqXHR, textStatus, errorThrown) {
      console.info('using activityServerAddress:' + url);
      console.warn("error:" + textStatus);
    });
  }; //@ sourceURL=backendtxrx.ux

  // http://www.html5rocks.com/en/tutorials/cors/
  // response['Access-Control-Allow-Origin'] = '*'
  // response['Access-Control-Allow-Methods'] = 'POST, GET, OPTIONS'
  // response['Access-Control-Max-Age'] = 1000
  // # note that '*' is not valid for Access-Control-Allow-Headers
  // response['Access-Control-Allow-Headers'] = 'origin, x-csrftoken, content-type, accept'
